-- The protocol for the dining cryptographers (Chaum)
-- This file is automatically generated for 12 cryptographers
Semantics=SingleAssignment;

Agent Environment
  Obsvars:
    numberofodd : { none, even, odd };
  end Obsvars

  Vars:
    coin1 : {head,tail};
    coin2 : {head,tail};
    coin3 : {head,tail};
    coin4 : {head,tail};
    coin5 : {head,tail};
    coin6 : {head,tail};
    coin7 : {head,tail};
    coin8 : {head,tail};
    coin9 : {head,tail};
    coin10 : {head,tail};
    coin11 : {head,tail};
    coin12 : {head,tail};
    say1 : 0..1;
    say2 : 0..1;
    say3 : 0..1;
    say4 : 0..1;
    say5 : 0..1;
    say6 : 0..1;
    say7 : 0..1;
    say8 : 0..1;
    say9 : 0..1;
    say10 : 0..1;
    say11 : 0..1;
    say12 : 0..1;
    count : boolean;
  end Vars

  Actions = { none };
  Protocol:
    Other : {none};
  end Protocol

  Evolution:
    say1 = 0 if numberofodd=none and DinCrypt1.Action=sayequal;
    say1 = 1 if numberofodd=none and DinCrypt1.Action=saydifferent;
    say2 = 0 if numberofodd=none and DinCrypt2.Action=sayequal;
    say2 = 1 if numberofodd=none and DinCrypt2.Action=saydifferent;
    say3 = 0 if numberofodd=none and DinCrypt3.Action=sayequal;
    say3 = 1 if numberofodd=none and DinCrypt3.Action=saydifferent;
    say4 = 0 if numberofodd=none and DinCrypt4.Action=sayequal;
    say4 = 1 if numberofodd=none and DinCrypt4.Action=saydifferent;
    say5 = 0 if numberofodd=none and DinCrypt5.Action=sayequal;
    say5 = 1 if numberofodd=none and DinCrypt5.Action=saydifferent;
    say6 = 0 if numberofodd=none and DinCrypt6.Action=sayequal;
    say6 = 1 if numberofodd=none and DinCrypt6.Action=saydifferent;
    say7 = 0 if numberofodd=none and DinCrypt7.Action=sayequal;
    say7 = 1 if numberofodd=none and DinCrypt7.Action=saydifferent;
    say8 = 0 if numberofodd=none and DinCrypt8.Action=sayequal;
    say8 = 1 if numberofodd=none and DinCrypt8.Action=saydifferent;
    say9 = 0 if numberofodd=none and DinCrypt9.Action=sayequal;
    say9 = 1 if numberofodd=none and DinCrypt9.Action=saydifferent;
    say10 = 0 if numberofodd=none and DinCrypt10.Action=sayequal;
    say10 = 1 if numberofodd=none and DinCrypt10.Action=saydifferent;
    say11 = 0 if numberofodd=none and DinCrypt11.Action=sayequal;
    say11 = 1 if numberofodd=none and DinCrypt11.Action=saydifferent;
    say12 = 0 if numberofodd=none and DinCrypt12.Action=sayequal;
    say12 = 1 if numberofodd=none and DinCrypt12.Action=saydifferent;
    count = true if numberofodd=none and (DinCrypt1.Action=sayequal or DinCrypt1.Action=saydifferent);
    numberofodd=even if numberofodd=none and count = true and ( 
        say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=0 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=2 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=4 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=6 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=8 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=10 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=12);

    numberofodd=odd if numberofodd=none and count = true and ( 
        say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=1 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=3 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=5 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=7 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=9 or say1+say2+say3+say4+say5+say6+say7+say8+say9+say10+say11+say12=11);

  end Evolution
end Agent

Agent DinCrypt1
  Lobsvars = {coin1, coin12};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin1=head and Environment.coin12=head ) or
      ( seedifferent=empty and Environment.coin1=tail and Environment.coin12=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin1=head and Environment.coin12=tail ) or
      ( seedifferent=empty and Environment.coin1=tail and Environment.coin12=head );
  end Evolution
end Agent
Agent DinCrypt2
  Lobsvars = {coin2, coin1};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin2=head and Environment.coin1=head ) or
      ( seedifferent=empty and Environment.coin2=tail and Environment.coin1=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin2=head and Environment.coin1=tail ) or
      ( seedifferent=empty and Environment.coin2=tail and Environment.coin1=head );
  end Evolution
end Agent
Agent DinCrypt3
  Lobsvars = {coin3, coin2};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin3=head and Environment.coin2=head ) or
      ( seedifferent=empty and Environment.coin3=tail and Environment.coin2=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin3=head and Environment.coin2=tail ) or
      ( seedifferent=empty and Environment.coin3=tail and Environment.coin2=head );
  end Evolution
end Agent
Agent DinCrypt4
  Lobsvars = {coin4, coin3};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin4=head and Environment.coin3=head ) or
      ( seedifferent=empty and Environment.coin4=tail and Environment.coin3=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin4=head and Environment.coin3=tail ) or
      ( seedifferent=empty and Environment.coin4=tail and Environment.coin3=head );
  end Evolution
end Agent
Agent DinCrypt5
  Lobsvars = {coin5, coin4};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin5=head and Environment.coin4=head ) or
      ( seedifferent=empty and Environment.coin5=tail and Environment.coin4=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin5=head and Environment.coin4=tail ) or
      ( seedifferent=empty and Environment.coin5=tail and Environment.coin4=head );
  end Evolution
end Agent
Agent DinCrypt6
  Lobsvars = {coin6, coin5};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin6=head and Environment.coin5=head ) or
      ( seedifferent=empty and Environment.coin6=tail and Environment.coin5=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin6=head and Environment.coin5=tail ) or
      ( seedifferent=empty and Environment.coin6=tail and Environment.coin5=head );
  end Evolution
end Agent
Agent DinCrypt7
  Lobsvars = {coin7, coin6};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin7=head and Environment.coin6=head ) or
      ( seedifferent=empty and Environment.coin7=tail and Environment.coin6=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin7=head and Environment.coin6=tail ) or
      ( seedifferent=empty and Environment.coin7=tail and Environment.coin6=head );
  end Evolution
end Agent
Agent DinCrypt8
  Lobsvars = {coin8, coin7};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin8=head and Environment.coin7=head ) or
      ( seedifferent=empty and Environment.coin8=tail and Environment.coin7=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin8=head and Environment.coin7=tail ) or
      ( seedifferent=empty and Environment.coin8=tail and Environment.coin7=head );
  end Evolution
end Agent
Agent DinCrypt9
  Lobsvars = {coin9, coin8};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin9=head and Environment.coin8=head ) or
      ( seedifferent=empty and Environment.coin9=tail and Environment.coin8=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin9=head and Environment.coin8=tail ) or
      ( seedifferent=empty and Environment.coin9=tail and Environment.coin8=head );
  end Evolution
end Agent
Agent DinCrypt10
  Lobsvars = {coin10, coin9};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin10=head and Environment.coin9=head ) or
      ( seedifferent=empty and Environment.coin10=tail and Environment.coin9=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin10=head and Environment.coin9=tail ) or
      ( seedifferent=empty and Environment.coin10=tail and Environment.coin9=head );
  end Evolution
end Agent
Agent DinCrypt11
  Lobsvars = {coin11, coin10};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin11=head and Environment.coin10=head ) or
      ( seedifferent=empty and Environment.coin11=tail and Environment.coin10=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin11=head and Environment.coin10=tail ) or
      ( seedifferent=empty and Environment.coin11=tail and Environment.coin10=head );
  end Evolution
end Agent
Agent DinCrypt12
  Lobsvars = {coin12, coin11};
  Vars:
    payer : {yes,no};
    seedifferent : { empty, yes, no };
  end Vars
  Actions = { sayequal, saydifferent, none };
  Protocol:
    (payer=no and seedifferent=yes): {saydifferent};
    (payer=no and seedifferent=no) : {sayequal};
    (payer=yes and seedifferent=yes): {sayequal};
    (payer=yes and seedifferent=no) : {saydifferent};
    Other: {none};
  end Protocol
  Evolution:
    (seedifferent=no) if ( seedifferent=empty and Environment.coin12=head and Environment.coin11=head ) or
      ( seedifferent=empty and Environment.coin12=tail and Environment.coin11=tail ); 
    (seedifferent=yes)  if ( seedifferent=empty and Environment.coin12=head and Environment.coin11=tail ) or
      ( seedifferent=empty and Environment.coin12=tail and Environment.coin11=head );
  end Evolution
end Agent
Evaluation
  c1paid if ( DinCrypt1.payer=yes );
  c2paid if ( DinCrypt2.payer=yes );
  c3paid if ( DinCrypt3.payer=yes );
  c4paid if ( DinCrypt4.payer=yes );
  c5paid if ( DinCrypt5.payer=yes );
  c6paid if ( DinCrypt6.payer=yes );
  c7paid if ( DinCrypt7.payer=yes );
  c8paid if ( DinCrypt8.payer=yes );
  c9paid if ( DinCrypt9.payer=yes );
  c10paid if ( DinCrypt10.payer=yes );
  c11paid if ( DinCrypt11.payer=yes );
  c12paid if ( DinCrypt12.payer=yes );
  odd if ( Environment.numberofodd=odd);
  even if ( Environment.numberofodd=even);
end Evaluation
InitStates
 (  ( DinCrypt1.payer=yes and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=yes and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=yes and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=yes and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=yes and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=yes and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=yes and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=yes and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=yes and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=yes and DinCrypt11.payer=no and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=yes and DinCrypt12.payer=no)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=yes)  or 
 ( DinCrypt1.payer=no and DinCrypt2.payer=no and DinCrypt3.payer=no and DinCrypt4.payer=no and DinCrypt5.payer=no and DinCrypt6.payer=no and DinCrypt7.payer=no and DinCrypt8.payer=no and DinCrypt9.payer=no and DinCrypt10.payer=no and DinCrypt11.payer=no and DinCrypt12.payer=no)  ) 
 and (Environment.numberofodd=none 
 and DinCrypt1.seedifferent=empty and DinCrypt2.seedifferent=empty and DinCrypt3.seedifferent=empty and DinCrypt4.seedifferent=empty and DinCrypt5.seedifferent=empty and DinCrypt6.seedifferent=empty and DinCrypt7.seedifferent=empty and DinCrypt8.seedifferent=empty and DinCrypt9.seedifferent=empty and DinCrypt10.seedifferent=empty and DinCrypt11.seedifferent=empty and DinCrypt12.seedifferent=empty and Environment.say1=0 and Environment.say2=0 and Environment.say3=0 and Environment.say4=0 and Environment.say5=0 and Environment.say6=0 and Environment.say7=0 and Environment.say8=0 and Environment.say9=0 and Environment.say10=0 and Environment.say11=0 and Environment.say12=0 and Environment.count=false);
end InitStates
Groups
  cryptos = {DinCrypt1, DinCrypt2, DinCrypt3, DinCrypt4, DinCrypt5, DinCrypt6, DinCrypt7, DinCrypt8, DinCrypt9, DinCrypt10, DinCrypt11, DinCrypt12};
end Groups
Formulae
LTL G( (odd and !c1paid) -> (K(DinCrypt1,(c2paid or c3paid or c4paid or c5paid or c6paid or c7paid or c8paid or c9paid or c10paid or c11paid or c12paid) ) ) and !K(DinCrypt1,c2paid) and !K(DinCrypt1,c3paid) and !K(DinCrypt1,c4paid) and !K(DinCrypt1,c5paid) and !K(DinCrypt1,c6paid) and !K(DinCrypt1,c7paid) and !K(DinCrypt1,c8paid) and !K(DinCrypt1,c9paid) and !K(DinCrypt1,c10paid) and !K(DinCrypt1,c11paid) and !K(DinCrypt1,c12paid) ); -- True (the protocol works)
LTL G (odd -> c1paid); -- False
LTL G (even -> GCK(cryptos, (!c1paid and !c2paid and !c3paid and !c4paid and !c5paid and !c6paid and !c7paid and !c8paid and !c9paid and !c10paid and !c11paid and !c12paid))); -- True
end Formulae
